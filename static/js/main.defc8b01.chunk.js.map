{"version":3,"sources":["components/CoinSpot.js","components/GameStatus.js","components/Reset.js","constants/constants.js","core/core.js","components/Header.js","components/GameBoard.js","components/Parent.js","App.js","serviceWorker.js","index.js"],"names":["CoinSpot","_this","this","react_default","a","createElement","className","props","class","id","onClick","handleClick","prevProps","reset","checkWinner","Component","GameStatus","flipCoin","gameStatus","Reset","handleReset","INITIAL_STATE","MAX_GRID_DEPTH","PLAYER1_COLOR","PLAYER1_STATUS","currentDiscPosition","gridState","currRow","currCol","currClass","getClassName","some","curr","innerElement","winDeque","getCoinSpotComponent","length","push","unshift","checkHorizontal","checkVertical","checkDiagonal45deg","checkDiagonal135deg","getIn","Header","href","target","rel","src","alt","GameBoard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","initialstate","List","map","rowId","columnId","CoinSpot_CoinSpot","key","state","clickedColumnIndex","currentColor","result","Header_Header","GameStatus_GameStatus","Reset_Reset","clickedClassName","_this2","canClick","rowIndex","i","placeDisc","setState","prevState","setIn","message","winnerStatus","_this3","Parent","GameBoard_GameBoard","App","Parent_Parent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.defc8b01.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nimport \"./style/game.css\"\n\nexport default class CoinSpot extends Component{\n    render(){\n        return(\n        <div \n        className = {this.props.class} \n        id = {this.props.id} \n        onClick = {() => this.props.handleClick(this.props.id[1], this.props.class)}>\n        </div>\n        );\n    }\n\n    componentDidUpdate(prevProps){\n        if(!this.props.reset){\n        if(this.props.class !== prevProps.class){\n            this.props.checkWinner(this.props.id);\n        }}\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class GameStatus extends Component {\n\n    render() {\n        return (\n            <div className = \"GameStatus\">\n                <div className = {this.props.flipCoin === \"left\"? \"FlipCoin flip-left ColorPlayer2\" : \"FlipCoin flip-right ColorPlayer1\"}></div>\n\n                <div className = \"Status\">\n                    <strong>{this.props.gameStatus}</strong>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react'\n\nexport default class Reset extends Component {\n    \n    render() {\n        return (\n            <div >\n                <button className = \"Reset\" onClick = {()=> this.props.handleReset()}><strong>RESET</strong></button>\n            </div>\n        );\n    }\n}","\nexport const INITIAL_STATE = [\n    ['emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc'],\n    ['emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc'],\n    ['emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc'],\n    ['emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc'],\n    ['emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc'],\n    ['emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc','emptyDisc']\n];\n\nexport const MAX_GRID_DEPTH = 6;\n\nexport const MAX_GRID_COLUMN = 7;\n\nexport const PLAYER1_COLOR = \"Player1Disc\";\n\nexport const PLAYER2_COLOR = \"Player2Disc\";\n\nexport const PLAYER1_STATUS =\"Player 1 your turn!\";\n\nexport const PLAYER2_STATUS =\"Player 2 your turn!\";","import { MAX_GRID_DEPTH} from \"../constants/constants\";\n\n\n\nexport function placeDisc(clickedColumnIndex, gridState){\n    \n    for(let i = MAX_GRID_DEPTH -1 ; i >= 0; i--){\n        \n        if(gridState.getIn([i, clickedColumnIndex]).props.class === 'emptyDisc'){\n            return i;\n        }\n    }\n    return -1;\n}\n\n\nexport function checkWinner(currentDiscPosition, gridState){\n    \n    let currRow = currentDiscPosition[0];\n    let currCol = currentDiscPosition[1];\n    //pushing curr component into winning Deque\n    const currClass = getClassName(currentDiscPosition,gridState);\n\n    //Check if the board is full(i.e. Game Drawn)\n    if(!gridState.some(curr => curr.some((innerElement)=>  innerElement.props.class === \"emptyDisc\")))\n    return [currClass, \"drawn\"];\n\n    //Check Horizontal\n\n    if(checkHorizontal(currCol, currRow, gridState, currClass).length === 4){\n        return [currClass , \"horizontally\"];\n    }\n    \n\n    //Check Vertically\n    if(checkVertical(currCol, currRow, gridState, currClass).length === 4){\n        return [currClass , \"vertically\"];\n    }\n\n\n    if(checkDiagonal45deg(currCol, currRow, gridState, currClass).length === 4){\n    \n        return [currClass , \"diagonally\"];\n    }\n\n    if(checkDiagonal135deg(currCol, currRow, gridState, currClass).length === 4){\n    \n        return [currClass , \"diagonally\"];\n    }\n\n    return [currClass , \"gameOn\"];\n};\n\n\nfunction getCoinSpotComponent(currentDiscPosition,gridState){\n    return gridState.getIn(currentDiscPosition);\n}\n\nfunction getClassName(currentDiscPosition,gridState){\n    return gridState.getIn(currentDiscPosition).props.class;\n}\n\n//Check Horizontally\n\nfunction checkHorizontal(currCol, currRow, gridState, currClass){\n    let winDeque = [getCoinSpotComponent([currRow, currCol], gridState)];\n    if(currCol+1 <= 6 && getClassName([currRow, currCol +1],gridState) === currClass && winDeque.length < 4)\n        {\n                winDeque.push(getCoinSpotComponent([currRow, currCol +1],gridState));\n    \n            if(currCol+2 <= 6 && getClassName([currRow, currCol +2],gridState) === currClass && winDeque.length < 4){\n    \n                winDeque.push(getCoinSpotComponent([currRow, currCol +2],gridState));\n\n                if(currCol+3 <= 6 && getClassName([currRow, currCol +3],gridState) === currClass && winDeque.length < 4){\n\n                    winDeque.push(getCoinSpotComponent([currRow, currCol +3],gridState));\n                \n                }\n\n            }\n        }\n        if(currCol-1 >= 0 && getClassName([currRow, currCol -1],gridState) === currClass && winDeque.length < 4)\n        {\n            winDeque.unshift(getCoinSpotComponent([currRow, currCol -1],gridState));\n            \n\n            if(currCol-2 >= 0 && getClassName([currRow, currCol - 2],gridState) === currClass && winDeque.length < 4){\n            \n                winDeque.unshift(getCoinSpotComponent([currRow, currCol - 2],gridState) && winDeque.length < 4);\n            \n                \n                if(currCol-3 >= 0 && getClassName([currRow, currCol - 3],gridState) === currClass && winDeque.length < 4){\n            \n                    winDeque.unshift(getCoinSpotComponent([currRow, currCol - 3],gridState));\n            \n                }\n\n            }\n        }\n        \n        return winDeque;\n}\n\n\n//Check Vertically\n\n\nfunction checkVertical(currCol, currRow, gridState, currClass){\n    let winDeque = [getCoinSpotComponent([currRow, currCol], gridState)];\n    if(currRow+1 <= 5 && getClassName([currRow+1, currCol],gridState) === currClass && winDeque.length < 4)\n        {\n                winDeque.push(getCoinSpotComponent([currRow+1, currCol],gridState));\n        \n            if(currRow+2 <= 5 && getClassName([currRow+2, currCol],gridState) === currClass && winDeque.length < 4){\n        \n                winDeque.push(getCoinSpotComponent([currRow+2, currCol],gridState));\n        \n                \n                if(currRow+3 <= 5 && getClassName([currRow+3, currCol],gridState) === currClass && winDeque.length < 4){\n        \n                    winDeque.push(getCoinSpotComponent([currRow+3, currCol],gridState));\n        \n                }\n\n            }\n        }\n        \n        return winDeque;\n}\n\n\n//Check Diagonally at 45 degrees\n\nfunction checkDiagonal45deg(currCol, currRow, gridState, currClass){\n    let winDeque = [getCoinSpotComponent([currRow, currCol], gridState)];\n    //Check Diagonally NorthEast  SouthWest\n    if(currRow - 1 >= 0 \n        && currCol+1 <= 6 \n        && getClassName([currRow -1 , currCol +1],gridState) === currClass \n        && winDeque.length < 4)\n        {       \n                winDeque.push(getCoinSpotComponent([currRow -1, currCol +1],gridState));\n        \n            if(currRow - 2 >= 0 \n                && currCol+2 <= 6 \n                && getClassName([currRow -2, currCol +2],gridState) === currClass \n                && winDeque.length < 4){\n        \n                winDeque.push(getCoinSpotComponent([currRow -2, currCol +2],gridState));\n        \n                if(currRow - 3 >= 0 \n                    && currCol+3 <= 6 \n                    && getClassName([currRow -3, currCol +3],gridState) === currClass \n                    && winDeque.length < 4){\n        \n                    winDeque.push(getCoinSpotComponent([currRow -3, currCol +3],gridState));\n        \n                }\n\n            }\n        }\n        if(currRow + 1 <= 5 \n            && currCol-1 >= 0 \n            && getClassName([currRow + 1 , currCol - 1],gridState) === currClass \n            && winDeque.length < 4)\n            {\n                    winDeque.unshift(getCoinSpotComponent([currRow +1, currCol -1],gridState));\n        \n                if(currRow + 2 <= 5 \n                    && currCol-2 >= 0 \n                    && getClassName([currRow +2, currCol -2],gridState) === currClass \n                    && winDeque.length < 4){\n        \n                    winDeque.unshift(getCoinSpotComponent([currRow +2, currCol -2],gridState));\n        \n                    \n                    if(currRow + 3 <= 5 \n                        && currCol-3 >= 0 \n                        && getClassName([currRow +3, currCol -3],gridState) === currClass \n                        && winDeque.length < 4){\n        \n                        winDeque.unshift(getCoinSpotComponent([currRow +3, currCol -3],gridState));\n        \n                    }\n    \n                }\n            }        \n        return winDeque;\n}\n\n\n//Check Diagonally at 135 degrees\n\nfunction checkDiagonal135deg(currCol, currRow, gridState, currClass){\n    let winDeque = [getCoinSpotComponent([currRow, currCol], gridState)];\n    //Check Diagonally NorthEast  SouthWest\n    if(currRow - 1 >= 0 \n        && currCol-1 >= 0 \n        && getClassName([currRow -1 , currCol -1],gridState) === currClass \n        && winDeque.length < 4)\n        {\n                winDeque.push(getCoinSpotComponent([currRow -1, currCol +1],gridState));\n        \n            if(currRow - 2 >= 0 \n                && currCol-2 >= 0 \n                && getClassName([currRow -2, currCol -2],gridState) === currClass \n                && winDeque.length < 4){\n        \n                winDeque.push(getCoinSpotComponent([currRow -2, currCol -2],gridState));\n        \n                if(currRow - 3 >= 0 \n                    && currCol-3 >= 0 \n                    && getClassName([currRow -3, currCol -3],gridState) === currClass \n                    && winDeque.length < 4){\n        \n                    winDeque.push(getCoinSpotComponent([currRow -3, currCol -3],gridState));\n        \n                }\n\n            }\n        }\n        if(currRow + 1 <= 5 \n            && currCol+1 <= 6 \n            && getClassName([currRow + 1 , currCol + 1],gridState) === currClass \n            && winDeque.length < 4)\n            {\n                    winDeque.unshift(getCoinSpotComponent([currRow +1, currCol +1],gridState));\n        \n                if(currRow + 2 <= 5 \n                    && currCol+2 <= 6 \n                    && getClassName([currRow +2, currCol +2],gridState) === currClass \n                    && winDeque.length < 4){\n        \n                    winDeque.unshift(getCoinSpotComponent([currRow +2, currCol +2],gridState));\n        \n                    \n                    if(currRow + 3 <= 5 \n                        && currCol+3 >= 6 \n                        && getClassName([currRow +3, currCol +3],gridState) === currClass \n                        && winDeque.length < 4){\n        \n                        winDeque.unshift(getCoinSpotComponent([currRow +3, currCol +3],gridState));\n        \n                    }\n    \n                }\n            }        \n        return winDeque;\n}\n","import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    \n    render() {\n        return (\n            <div className =\"Header\">\n                <h1 className=\"Heading\">Connect 4our</h1>\n                \n                <a href = \"https://en.wikipedia.org/wiki/Connect_Four#Gameplay\" target = \"_blank\" rel=\"noopener noreferrer\">\n                <img className = \"Help\" src={\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-ios7-help-outline-512.png\"} alt=\"Know the rules\"/>\n                </a>\n            </div>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport \"./style/game.css\";\nimport CoinSpot from './CoinSpot';\nimport GameStatus from \"./GameStatus\";\nimport Reset from \"./Reset\";\nimport { placeDisc , checkWinner } from \"../core/core\";\nimport { INITIAL_STATE , PLAYER1_COLOR, PLAYER2_COLOR, PLAYER1_STATUS, PLAYER2_STATUS} from \"../constants/constants\";\nimport { List } from \"immutable\";\nimport Header from './Header';\n\nexport default class GameBoard extends Component{\n    \n    constructor(props){\n        super(props);\n        \n        this.handleClick = this.handleClick.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.checkWinner = this.checkWinner.bind(this);\n\n        const initialstate = List(INITIAL_STATE.map((curr, rowId) => {\n            return curr.map((innerElement, columnId)=> <CoinSpot \n                                                        key = {[rowId, columnId]} \n                                                        id = {[rowId , columnId]} \n                                                        class = {innerElement} \n                                                        handleClick = {this.handleClick}\n                                                        checkWinner = {this.checkWinner}\n                                                        reset = {false}/>)\n        }));\n\n        this.state = {\n            gridState : initialstate,\n            clickedColumnIndex : 0,\n            currentColor : PLAYER1_COLOR,\n            flipCoin : \"right\",\n            gameStatus : PLAYER1_STATUS,\n            result : \"\"\n        }\n    }\n    \n    render(){\n        const gameStatus = this.state.result === \"\" ? this.state.gameStatus : this.state.result;\n        return(\n            <div className = {this.state.result === \"\" ?\"MainSection\" : \"MainSection GameOver\"}>\n                <Header />\n                <GameStatus \n                    flipCoin={this.state.flipCoin} \n                    gameStatus = {gameStatus} />\n                <div className = \"GameBoard\"> \n                    {this.state.gridState}\n                </div>\n                <Reset handleReset = {this.handleReset}/>\n            </div>\n        )\n    }\n\n    handleClick(clickedColumnIndex,clickedClassName){\n        const canClick = this.state.result===\"\" ; \n        const rowIndex = placeDisc(clickedColumnIndex, this.state.gridState);\n        if(canClick){\n            if(rowIndex > -1){\n            this.setState(prevState => ({\n                        gridState : prevState.gridState.setIn([rowIndex , clickedColumnIndex], \n                                                        <CoinSpot \n                                                            key = {[rowIndex , clickedColumnIndex]} \n                                                            id = {[rowIndex , clickedColumnIndex]} \n                                                            class = {prevState.currentColor} \n                                                            handleClick = {this.handleClick} \n                                                            checkWinner = {this.checkWinner}\n                                                            reset = {false}/>),\n                        currentColor : prevState.currentColor === PLAYER1_COLOR ? PLAYER2_COLOR : PLAYER1_COLOR,\n                        gameStatus : prevState.gameStatus === PLAYER1_STATUS ? PLAYER2_STATUS : PLAYER1_STATUS,\n                        flipCoin : prevState.flipCoin === \"right\" ?\"left\" : \"right\",\n                        \n\n                    })\n                );\n                \n            }\n        }\n        \n        \n        \n    }\n\n    //Check if there's a winner by passing the current position\n    checkWinner(currentDiscPosition){\n        const message = checkWinner(currentDiscPosition, this.state.gridState);\n\n        if(message[1] !== \"gameOn\"){\n            \n                const winnerStatus = \n                message[1] === \"drawn\" \n                ? \"Game is Drawn!!!\" :\n                    (message[0] === PLAYER1_COLOR ? \n                    \"Player 1 wins \"+ message[1] :\n                    \"Player 2 wins \"+ message[1]);\n                this.setState(prevState => ({\n                    result: winnerStatus}));\n        }\n    }\n\n    //Reset the entire state of the GameBoard Component\n\n    handleReset(){\n        this.setState(\n            {\n            gridState : List(INITIAL_STATE.map((curr, rowId) => {\n                return curr.map((innerElement, columnId)=> <CoinSpot \n                                                            key = {[rowId, columnId]} \n                                                            id = {[rowId , columnId]} \n                                                            class = {innerElement} \n                                                            handleClick = {this.handleClick}\n                                                            checkWinner = {this.checkWinner}\n                                                            reset = {true} />)\n            })),\n            clickedColumnIndex : 0,\n            currentColor : PLAYER1_COLOR,\n            currentDiscPosition : [],\n            flipCoin : \"right\",\n            gameStatus : PLAYER1_STATUS,\n            result : \"\"\n            }\n        );\n    }\n\n\n}","import React, { Component } from 'react';\n\nimport GameBoard from \"./GameBoard\";\n\n\n\nexport default class Parent extends Component {\n\n\n    render(){\n        return(\n            <div className = \"Parent\">\n                \n                <hr/>\n                <GameBoard />\n                \n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport Parent from './components/Parent';\n\nfunction App() {\n  return (\n    <div >\n      <Parent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}